require 'spec_helper'

# TODO: REFACTOR
describe Stribog::Compression do
  context '256 bit hash, with 504 bit message' do
    let(:n) { Stribog::BinaryVector.new('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'.chars.map(&:to_i)) }
    let(:message) { Stribog::BinaryVector.newchars.map(&:to_i)) }
    let(:hash_vector) { Stribog::BinaryVector.newchars.map(&:to_i)) }

    subject { Stribog::Compression.new(n, message, hash_vector).call.to_s }

    it { should eq('11100011101110111010110110111111011110001010111100110010011001001100100100010011011100010010011101100000100010101010010100010000110111101001000010111010010011010011000001110101011001100101100001000100100101100101111110110110000100011101101110110001100110011000110101001000010101010010101000001100000011001110011010111100101110100111000110111100100000000010101001001111010110110010110100101010000001111011000100101100001000101110001001010111100101000001011110000101011100000011010000010000100101101111110111000111') }
  end

  context '256 bit hash, with 504 bit message' do
    let(:n) { Stribog::BinaryVector.new('00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'.chars.map(&:to_i)) }
    let(:message) { Stribog::BinaryVector.newchars.map(&:to_i)) }
    let(:hash_vector) { Stribog::BinaryVector.newchars.map(&:to_i)) }

    subject { Stribog::Compression.new(n, message, hash_vector).call.to_s }

    it { should eq}
  end
end